rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function userRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && userRole() == "admin";
    }
    
    match /users/{uid} {
      allow read: if isAuthenticated() && (request.auth.uid == uid || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == uid;
      // Users can edit only non-sensitive fields on their own document.
      // Admins can update any user document (role/status management).
      allow update: if isAuthenticated() && (
        (
          request.auth.uid == uid &&
          request.resource.data.role == resource.data.role &&
          request.resource.data.status == resource.data.status &&
          request.resource.data.email == resource.data.email
        ) || isAdmin()
      );
    }
    
    match /appointments/{id} {
      // Any authenticated user can read appointments
      allow read: if isAuthenticated();
      // Only secretary or admin can create; enforce createdBy matches the caller
      allow create: if isAuthenticated() && (userRole() == "secretary" || userRole() == "admin") && request.resource.data.createdBy == request.auth.uid;
      // Only secretary or admin can update/delete
      allow update, delete: if isAuthenticated() && (userRole() == "secretary" || userRole() == "admin");
    }
  }
}
